project(':vendor') {
    /** Configure all bundles. */
    subprojects {
        jar {
            manifest {
                attributes 'Manifest-Version': version,
                    'Implementation-Version': version
            }
            
            /** Copy bundle jar file to root bundles directory. */
            doLast {
                copy {
                    from new File(project.buildDir, 'libs')
                    into project.projectDir
                    include '*.jar'
                    exclude '*-annotations*.jar'
                    rename '(.*)-[\0-9]*(.jar)', '$1$2'
                }
            }
        }

        task assembleManifestClasspath {
            doLast {
                jar {
                    manifest {
                        attributes("Class-Path": configurations.compile.collect {
                            String result = ".";
                            
                            File abs = it.getAbsoluteFile();
                            File workingDir = rootProject.projectDir;
                            
                            URI resultString = workingDir.toURI().relativize(abs.toURI());
                            
                            if (!resultString.toString().equals("")) {
                                result = resultString.toString();
                            }
                            
                            if (result.startsWith("file:")) {
                                result = result.substring("file:".length());
                            }
                            
                            result = result.replace("vendor/", "../")
                        }.join(' '))
                    }
                }
            }
        }
        
        jar.dependsOn assembleManifestClasspath
    }
}
